// ==================== C·∫§U H√åNH BACKEND ====================
// D√πng localhost khi dev, d√πng link Render khi deploy
const API_URL = "https://c-y-c-nh-77-2.onrender.com";

// ==================== LOAD S·∫¢N PH·∫®M ====================
async function loadProducts() {
  try {
    const res = await fetch("product.json"); // file product.json
    const products = await res.json();

    const grid = document.getElementById("productGrid");
    grid.innerHTML = "";

    products.forEach(p => {
      const div = document.createElement("div");
      div.className = "col-md-3 mb-4";
      div.innerHTML = `
        <div class="card h-100 shadow-sm">
          <img src="${p.image}" class="card-img-top" style="height:200px;object-fit:cover">
          <div class="card-body text-center">
            <h5 class="card-title">${p.name}</h5>
            <p class="card-text text-danger font-weight-bold">${formatPrice(p.price)}</p>
            <button class="btn btn-success" onclick="addToCart('${p.id}', '${p.name.replace(/'/g, "\\'")}', ${p.price})">
              üõí Th√™m v√†o gi·ªè
            </button>
          </div>
        </div>
      `;
      grid.appendChild(div);
    });
  } catch (err) {
    console.error("‚ùå L·ªói load product.json:", err);
  }
}

// ==================== H√ÄM ƒê·ªäNH D·∫†NG GI√Å ====================
function formatPrice(value) {
  return Number(value).toLocaleString("vi-VN", { style: "currency", currency: "VND" });
}

// ==================== GI·ªé H√ÄNG ====================

// M·ªü popup gi·ªè h√†ng
function toggleCart() {
  const modal = document.getElementById("cartModal");
  if (modal) {
    // N·∫øu b·∫°n d√πng Bootstrap 5:
    const cartModal = new bootstrap.Modal(modal);
    cartModal.show();
  } else {
    alert("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ #cartModal trong HTML!");
  }
  refreshCart();
}

// Th√™m v√†o gi·ªè h√†ng
async function addToCart(id, name, price) {
  try {
    const res = await fetch(`${API_URL}/api/cart/add`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ id, name, price })
    });

    if (!res.ok) throw new Error("L·ªói khi th√™m gi·ªè h√†ng");

    await refreshCart();
    // Hi·ªán popup ngay khi th√™m
    toggleCart();
  } catch (err) {
    console.error("‚ùå L·ªói addToCart:", err);
    alert("Kh√¥ng th·ªÉ th√™m v√†o gi·ªè h√†ng (ki·ªÉm tra backend Render).");
  }
}

// C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
async function updateQty(id, qty) {
  if (qty < 1) return removeFromCart(id);
  await fetch(`${API_URL}/api/cart/${id}`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ qty })
  });
  refreshCart();
}

// X√≥a s·∫£n ph·∫©m
async function removeFromCart(id) {
  await fetch(`${API_URL}/api/cart/${id}`, { method: "DELETE" });
  refreshCart();
}

// L·∫•y gi·ªè h√†ng t·ª´ backend
async function refreshCart() {
  try {
    const res = await fetch(`${API_URL}/api/cart`);
    const data = await res.json();
    updateCart(data);
  } catch (err) {
    console.error("‚ùå L·ªói refreshCart:", err);
  }
}

// Render gi·ªè h√†ng trong popup
function updateCart(cart) {
  const container = document.getElementById("cartItems");
  container.innerHTML = "";
  let total = 0;

  if (!cart || cart.length === 0) {
    container.innerHTML = "<p>üõí Gi·ªè h√†ng tr·ªëng!</p>";
    document.getElementById("cartTotal").innerText = formatPrice(0);
    return;
  }

  cart.forEach(i => {
    total += i.price * i.qty;
    const row = document.createElement("div");
    row.className = "d-flex justify-content-between align-items-center mb-2";
    row.innerHTML = `
      <div>${i.name} x${i.qty} - ${formatPrice(i.price * i.qty)}</div>
      <div>
        <button class="btn btn-sm btn-outline-secondary" onclick="updateQty('${i.id}', ${i.qty - 1})">-</button>
        <button class="btn btn-sm btn-outline-secondary" onclick="updateQty('${i.id}', ${i.qty + 1})">+</button>
        <button class="btn btn-sm btn-danger" onclick="removeFromCart('${i.id}')">X√≥a</button>
      </div>
    `;
    container.appendChild(row);
  });

  document.getElementById("cartTotal").innerText = formatPrice(total);
}

// Thanh to√°n
async function checkout() {
  const res = await fetch(`${API_URL}/api/cart`);
  const cart = await res.json();

  if (cart.length === 0) {
    alert("üõí Gi·ªè h√†ng ƒëang tr·ªëng!");
    return;
  }

  let summary = "‚úÖ B·∫°n ƒë√£ ƒë·∫∑t:\n";
  let total = 0;
  cart.forEach(item => {
    summary += `- ${item.name} x${item.qty} = ${formatPrice(item.price * item.qty)}\n`;
    total += item.price * item.qty;
  });

  summary += `\nT·ªïng c·ªông: ${formatPrice(total)}`;
  alert(summary);

  await fetch(`${API_URL}/api/cart/clear`, { method: "POST" });
  refreshCart();
}

// ==================== KHI LOAD TRANG ====================
window.onload = () => {
  loadProducts();
  refreshCart();
};




